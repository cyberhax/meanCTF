{"version":3,"sources":["config/seed.js"],"names":["ip","find","remove","then","create","name","info","hint","point","answer","provider","email","password","question","role"],"mappings":"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","file":"config/seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport Thing from '../api/thing/thing.model';\nimport User from '../api/user/user.model';\nimport Question from '../api/question/question.model';\n\nvar ip = `10.62.108.248:3000`;\n\nQuestion.find({}).remove()\n  .then(() => {\n    Question.create({\n      name: 'Easy',\n      info: 'presentation/d/19fE3Edv7EHNQsiGxc2k2_uo8950Xa7U0sxAJpYs0reQ/',\n      hint:'Google laa',\n      point:100,\n      answer:'qweasdzxcnbvhgfytr',\n    },{\n      name: 'medium',\n      info: `Agreement with people ${ip}/public/setup.exe`,\n      hint:'Cer try test',\n      point:100,\n      answer:'SEM_susah_giler',\n    },{\n      name: 'hard',\n      info: `Open the link ${ip}/public/muffin.txt`,\n      hint:'Use calculator',\n      point:100,\n      answer:'nak muffin',\n    },{\n      name: 'hard',\n      info: `I found this pic at my friend laptop.I think he involve in some secret organization.Can you decrypt it for me. ${ip}/public/laaa.txt`,\n      hint:'Use calculator',\n      point:100,\n      answer:'royalechulan',\n    },{\n      name: 'hard',\n      info: `I tried to decrypt this code and my friend laugh at me. ${ip}/public/chall5.png`,\n      hint:'Use eye brain',\n      point:100,\n      answer:'dontbemadifyoutrytodecodethebraile',\n    },{\n      name: 'hard',\n      info: `la la la la laaaaaa. ${ip}/public/dadadadadam.txt`,\n      hint:'dodododot',\n      point:100,\n      answer:'morses',\n    },{\n      name: 'hard',\n      info: `I found this secret message inside my father laptop.Can you decode it for me? ${ip}/public/crypto.txt`,\n      hint:'zaman dulu tau laa',\n      point:100,\n      answer:'akulapar',\n    },{\n      name: 'hard',\n      info: `Forensic style. ${ip}/public/makan`,\n      hint:'(whuT is this file type?)',\n      point:150,\n      answer:'reversing_test',\n    },{\n      name: 'hard',\n      info: `download ${ip}/public/kelas.class`,\n      hint:'(whuT is this file type?)',\n      point:200,\n      answer:'not-to-secure',\n    },{\n      name: 'hard',\n      info: `There is a robots want to hide the flag in this website ${ip}/public/lala`,\n      hint:'robot',\n      point:150,\n      answer:'beep-beeeeeep',\n    },{\n      name: 'hard',\n      info: `what is the flag? ${ip}/public/encode`,\n      hint:'',\n      point:100,\n      answer:'utp{jjen}',\n    },{\n      name: 'Bonus',\n      info: `what is the flag? ${ip}/public/qr.png`,\n      hint:'',\n      point:150,\n      answer:'1b2ce8da9fcc7b0b2820b040f31b0d2e',\n    })\n  });\n\n\nThing.find({}).remove()\n  .then(() => {\n    Thing.create({\n      name: 'Development Tools',\n      info: 'Integration with popular tools such as Webpack, Gulp, Babel, TypeScript, Karma, '\n            + 'Mocha, ESLint, Node Inspector, Livereload, Protractor, Pug, '\n            + 'Stylus, Sass, and Less.'\n    }, {\n      name: 'Server and Client integration',\n      info: 'Built with a powerful and fun stack: MongoDB, Express, '\n            + 'AngularJS, and Node.'\n    }, {\n      name: 'Smart Build System',\n      info: 'Build system ignores `spec` files, allowing you to keep '\n            + 'tests alongside code. Automatic injection of scripts and '\n            + 'styles into your index.html'\n    }, {\n      name: 'Modular Structure',\n      info: 'Best practice client and server structures allow for more '\n            + 'code reusability and maximum scalability'\n    }, {\n      name: 'Optimized Build',\n      info: 'Build process packs up your templates as a single JavaScript '\n            + 'payload, minifies your scripts/css/images, and rewrites asset '\n            + 'names for caching.'\n    }, {\n      name: 'Deployment Ready',\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku '\n            + 'and openshift subgenerators'\n    });\n  });\n\nUser.find({}).remove()\n  .then(() => {\n    User.create({\n      provider: 'local',\n      name: 'khursani',\n      email: 'khursani8@gmail.com',\n      password: '1261995s',\n      point:0,\n      question:[]\n    }, {\n      provider: 'local',\n      role: 'admin',\n      name: 'Admin',\n      email: 'admin@example.com',\n      password: 'admin'\n    })\n    .then(() => {\n      // console.log('finished populating users');\n    });\n  });\n"],"sourceRoot":"/source/"}