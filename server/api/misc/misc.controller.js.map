{"version":3,"sources":["api/misc/misc.controller.js"],"names":["index","status","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;;;;;QAwDgBA,K,GAAAA,K;QAMAC,M,GAAAA,M;QAOAC,I,GAAAA,I;QAQAC,M,GAAAA,M;QAOAC,M,GAAAA,M;QAWAC,K,GAAAA,K;QAYAC,O,GAAAA,O;;AAzGhB;;;;AACA;;;;;;AAEA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOF,IAAIP,MAAJ,CAAWQ,UAAX,EAAuBE,IAAvB,CAA4BD,MAA5B,CAAP;AACD;AACD,WAAO,IAAP;AACD,GALD;AAMD;;AAED,SAASE,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAASH,MAAT,EAAiB;AACtB,QAAI;AACF,8BAAUI,KAAV,CAAgBJ,MAAhB,EAAwBG,OAAxB,EAAiC,YAAa,IAA9C;AACD,KAFD,CAEE,OAAME,GAAN,EAAW;AACX,aAAO,kBAAQC,MAAR,CAAeD,GAAf,CAAP;AACD;;AAED,WAAOL,OAAOO,IAAP,EAAP;AACD,GARD;AASD;;AAED,SAASC,YAAT,CAAsBV,GAAtB,EAA2B;AACzB,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAGA,MAAH,EAAW;AACT,aAAOA,OAAOS,MAAP,GACJC,IADI,CACC,YAAM;AACVZ,YAAIP,MAAJ,CAAW,GAAX,EAAgBoB,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAASC,oBAAT,CAA8Bd,GAA9B,EAAmC;AACjC,SAAO,UAASE,MAAT,EAAiB;AACtB,QAAG,CAACA,MAAJ,EAAY;AACVF,UAAIP,MAAJ,CAAW,GAAX,EAAgBoB,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOX,MAAP;AACD,GAND;AAOD;;AAED,SAASa,WAAT,CAAqBf,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAASM,GAAT,EAAc;AACnBP,QAAIP,MAAJ,CAAWQ,UAAX,EAAuBe,IAAvB,CAA4BT,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAASf,KAAT,CAAeyB,GAAf,EAAoBjB,GAApB,EAAyB;AAC9B,SAAO,eAAKkB,IAAL,GAAYC,IAAZ,GACJP,IADI,CACCb,kBAAkBC,GAAlB,CADD,EAEJoB,KAFI,CAEEL,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAEM,SAASP,MAAT,CAAgBwB,GAAhB,EAAqBjB,GAArB,EAA0B;AAC/B,SAAO,eAAKkB,IAAL,GAAYC,IAAZ,GACJP,IADI,CACCb,kBAAkBC,GAAlB,CADD,EAEJoB,KAFI,CAEEL,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASN,IAAT,CAAcuB,GAAd,EAAmBjB,GAAnB,EAAwB;AAC7B,SAAO,eAAKqB,QAAL,CAAcJ,IAAIK,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECb,kBAAkBC,GAAlB,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASL,MAAT,CAAgBsB,GAAhB,EAAqBjB,GAArB,EAA0B;AAC/B,SAAO,eAAKL,MAAL,CAAYsB,IAAIO,IAAhB,EACJZ,IADI,CACCb,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJoB,KAFI,CAEEL,YAAYf,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAASJ,MAAT,CAAgBqB,GAAhB,EAAqBjB,GAArB,EAA0B;AAC/B,MAAGiB,IAAIO,IAAJ,CAASC,GAAZ,EAAiB;AACf,WAAOR,IAAIO,IAAJ,CAASC,GAAhB;AACD;AACD,SAAO,eAAKC,gBAAL,CAAsB,EAACD,KAAKR,IAAIK,MAAJ,CAAWC,EAAjB,EAAtB,EAA4CN,IAAIO,IAAhD,EAAsD,EAAC5B,QAAQ,IAAT,EAAe+B,qBAAqB,IAApC,EAA0CC,eAAe,IAAzD,EAAtD,EAAsHT,IAAtH,GAEJP,IAFI,CAECb,kBAAkBC,GAAlB,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID;;AAED;AACO,SAASH,KAAT,CAAeoB,GAAf,EAAoBjB,GAApB,EAAyB;AAC9B,MAAGiB,IAAIO,IAAJ,CAASC,GAAZ,EAAiB;AACf,WAAOR,IAAIO,IAAJ,CAASC,GAAhB;AACD;AACD,SAAO,eAAKJ,QAAL,CAAcJ,IAAIK,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECR,aAAaa,IAAIO,IAAjB,CAFD,EAGJZ,IAHI,CAGCb,kBAAkBC,GAAlB,CAHD,EAIJoB,KAJI,CAIEL,YAAYf,GAAZ,CAJF,CAAP;AAKD;;AAED;AACO,SAASF,OAAT,CAAiBmB,GAAjB,EAAsBjB,GAAtB,EAA2B;AAChC,SAAO,eAAKqB,QAAL,CAAcJ,IAAIK,MAAJ,CAAWC,EAAzB,EAA6BJ,IAA7B,GACJP,IADI,CACCE,qBAAqBd,GAArB,CADD,EAEJY,IAFI,CAECF,aAAaV,GAAb,CAFD,EAGJoB,KAHI,CAGEL,YAAYf,GAAZ,CAHF,CAAP;AAID","file":"api/misc/misc.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/miscs              ->  index\n * POST    /api/miscs              ->  create\n * GET     /api/miscs/:id          ->  show\n * PUT     /api/miscs/:id          ->  upsert\n * PATCH   /api/miscs/:id          ->  patch\n * DELETE  /api/miscs/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Misc from './misc.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Miscs\nexport function index(req, res) {\n  return Misc.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function status(req, res) {\n  return Misc.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Misc from the DB\nexport function show(req, res) {\n  return Misc.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Misc in the DB\nexport function create(req, res) {\n  return Misc.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Misc in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Misc.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Misc in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Misc.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Misc from the DB\nexport function destroy(req, res) {\n  return Misc.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}